// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// get_Distance_Matrix
Rcpp::NumericMatrix get_Distance_Matrix(Rcpp::NumericMatrix queryData, Rcpp::NumericMatrix x, Rcpp::NumericVector weights);
RcppExport SEXP cbr_get_Distance_Matrix(SEXP queryDataSEXP, SEXP xSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type queryData(queryDataSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    __result = Rcpp::wrap(get_Distance_Matrix(queryData, x, weights));
    return __result;
END_RCPP
}
// getOrderMatrix
arma::umat getOrderMatrix(arma::mat& x, int sortDirection, int k);
RcppExport SEXP cbr_getOrderMatrix(SEXP xSEXP, SEXP sortDirectionSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type sortDirection(sortDirectionSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    __result = Rcpp::wrap(getOrderMatrix(x, sortDirection, k));
    return __result;
END_RCPP
}
// getOrderVector
arma::uvec getOrderVector(arma::vec x, int sort_direction, int k);
RcppExport SEXP cbr_getOrderVector(SEXP xSEXP, SEXP sort_directionSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type sort_direction(sort_directionSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    __result = Rcpp::wrap(getOrderVector(x, sort_direction, k));
    return __result;
END_RCPP
}
// weighted_knn
Rcpp::List weighted_knn(arma::mat x, arma::mat query, arma::vec weights, const int sortDirection, const int k);
RcppExport SEXP cbr_weighted_knn(SEXP xSEXP, SEXP querySEXP, SEXP weightsSEXP, SEXP sortDirectionSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type query(querySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< const int >::type sortDirection(sortDirectionSEXP);
    Rcpp::traits::input_parameter< const int >::type k(kSEXP);
    __result = Rcpp::wrap(weighted_knn(x, query, weights, sortDirection, k));
    return __result;
END_RCPP
}
// terminalNodeIDs
arma::vec terminalNodeIDs(arma::mat& x, arma::vec& childNodes1, arma::vec& childNodes2, arma::vec& splitValues, arma::vec& splitVarIds);
RcppExport SEXP cbr_terminalNodeIDs(SEXP xSEXP, SEXP childNodes1SEXP, SEXP childNodes2SEXP, SEXP splitValuesSEXP, SEXP splitVarIdsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type childNodes1(childNodes1SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type childNodes2(childNodes2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type splitValues(splitValuesSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type splitVarIds(splitVarIdsSEXP);
    __result = Rcpp::wrap(terminalNodeIDs(x, childNodes1, childNodes2, splitValues, splitVarIds));
    return __result;
END_RCPP
}
// proximityMatrix
arma::vec proximityMatrix(arma::mat& x);
RcppExport SEXP cbr_proximityMatrix(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    __result = Rcpp::wrap(proximityMatrix(x));
    return __result;
END_RCPP
}
// getPath
arma::uvec getPath(arma::umat& nodeIDs, int k);
RcppExport SEXP cbr_getPath(SEXP nodeIDsSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::umat& >::type nodeIDs(nodeIDsSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    __result = Rcpp::wrap(getPath(nodeIDs, k));
    return __result;
END_RCPP
}
// distTest
int distTest(arma::uvec& path1, arma::uvec& path2);
RcppExport SEXP cbr_distTest(SEXP path1SEXP, SEXP path2SEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::uvec& >::type path1(path1SEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type path2(path2SEXP);
    __result = Rcpp::wrap(distTest(path1, path2));
    return __result;
END_RCPP
}
// weighted_distance
NumericMatrix weighted_distance(NumericMatrix x, NumericMatrix query, NumericVector weigths);
RcppExport SEXP cbr_weighted_distance(SEXP xSEXP, SEXP querySEXP, SEXP weigthsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type query(querySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weigths(weigthsSEXP);
    __result = Rcpp::wrap(weighted_distance(x, query, weigths));
    return __result;
END_RCPP
}
